/* First thing we generally do in a project is to set the margin and padding to zero */
* {
  /* border-top: 10px solid #1098ad; */
  margin: 0;
  padding: 0;
  box-sizing: border-box; /*see slide 67, we want it for all the elements*/
}

/* PAGE SECTION */
body {
  font-family: sans-serif;
  color: #444;
  border-top: 10px solid #1098ad;
  position: relative;
}

.container {
  width: 1200px;
  margin: 0 auto;
  /* position: relative; */
}

nav {
  font-size: 18px;
}

/* article { */
/* margin-bottom: 60px; */
/* } */
.main-header {
  /* border-top: 10px solid #1098ad; */
  background-color: #f7f7f7f7;
  background-color: #d460b1;
  /* padding: 20px;
  padding-left: 40px;
  padding-right: 40px; */
  padding: 20px 40px;
  /* margin-bottom: 60px; */
  /* height: 80px; */
}

.post-header {
  margin-bottom: 40px;
  /* position: relative; */
}

aside {
  background-color: #f7f7f7f7;

  /* border: 5px solid/dotted/dashed #1098ad; */
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
  padding: 50px 40px;
  /* box-sizing: border-box; see slide 6 */
  /* width: 500px; */
}

/* SMALLE ELEMENTS */

h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
  margin-bottom: 30px;
}

/*  BIG NOTE!!! This phenomena is called COLLAPSING MARGIN: When we have 2 margins that occupied the same space, only one of them is actually visible on the page!! */
h3 {
  font-size: 30px;
  margin-bottom: 20px;
  margin-top: 40px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  /* text-align align h1 in the center of it's parent element (in this case it's all the page) */
  text-align: center;
  margin-bottom: 32px;
}

p {
  font-size: 22px;
  /* the line-height will be 1.5 time the font-size */
  line-height: 1.5;
  margin-bottom: 15px;
  /* display: inline; */
}

ul,
ol {
  margin-left: 50px;
  margin-bottom: 20px;
}

li {
  font-size: 20px;
  margin-bottom: 10px;
  /* display: inline; */
}

li:last-child {
  margin-bottom: 0;
}

/* 2 ways of doing the same thing: */
/* article header p {
  font-style: italic;
} */
#author {
  font-style: italic;
  font: 18px;
}

/* footer p {
  font-size: 16px;
} */
#copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

.related {
  list-style: none;
  margin-left: 0;
}

/* .first-li {
  font-weight: bold;
} */
/* we can use a pseudo class: */
li:first-child {
  font-weight: bold;
}
li:last-child {
  font-style: italic;
}
/* li:nth-child(2) {
  color: red;
} */
/* li:nth-child(even) {
  color: red;
} */

/* It does nothing bc the first child of the article in not a p element. If we use h2 instead of p it will works*/
article p:first-child {
  color: red;
}

a {
  color: red;
}

/* /!\ THE ORDER OF THESE 4 STATES MATTERS! link-visited-hover-active */
/* a:link and a:visited target all the anchor elements that have a href attribute (not yet visited and visited */
a:link,
a:visited {
  color: #1098ad;
  /* to get rid of the of the underline: */
  text-decoration: none;
}

/* when the anchor is covered by the mouse: */
a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline wavy blueviolet;
}

/* when we actually click on the link */
a:active {
  background-color: black;
  font-style: italic;
}

/* IMAGES ARE ACTUALLY INLINE-BLOCKS ! */
.post-img {
  /* it means that the width will be 100% of the parent element */
  width: 100%;
  height: auto;
  /* margin: 10px; */
}

nav a:link {
  background-color: rgb(165, 243, 165);
  margin-right: 20px;
  /* margin-top: 10px; */
  /* it adds margin horizontally but not vertically bc an anchor is an inline element */
  padding: 4px;
  /* if we add a padding the anchor content itself didn't move and is still in the exact same place */
  /* display: block; */
  display: inline-block;
}

nav a:link:last-child {
  margin-right: 0;
}

button {
  font-size: 22px;
  padding: 20px;
  cursor: pointer;
  position: absolute;
  /* top: 50px;
  left: 50px; */
  bottom: 50px;
  right: 50px;
}

/* We select a pseudo-element of h1 */
/* NOTE: pseudo classes are writtent with just one colon
and the pseudo elements are writtent with two colons */
h1::first-letter {
  font-style: normal;
  margin-right: 5px;
}

h2::first-letter {
  font-size: 80px;
}
p::first-line {
  color: red;
}

/* SIBLING ELEMENTS : elements that are part of the same parent */
/* ADJACENT ELEMENT : the sibling that comes right after  */
/* "+" selects the adjacent sibling element */
h3 + p::first-line {
  color: blue;
}

h2 {
  /* background-color: orange; */
  position: relative;
}
/* We can add an element after h2 */
h2::after {
  content: "TOP";
  color: #444;
  background-color: #ffe70e;
  font-size: 16px;
  font-weight: bold;
  /* By default any pseudo element is actually an inline element */
  display: inline-block;
  padding: 5px 10px;
  position: absolute;
  top: 0px;
  right: -25px;
}
/* TESTING RESOLVING CONFLICTS */
/* #copyright {
  color: red;
} */
/* .copyright {
  color: blue;
} */
/* .text {
  color: yellow;
} */
/* footer p {
  color: green;
} */

/* FLOATS */

/* .author-img {
  float: left;
  margin-bottom: 20px;
} */

/* .author { */
/* padding-left: 80px; */
/* Without adding float: left here, the author element starts behind the author-img element */
/* float: left;
  margin-top: 10px;
  margin-left: 20px;
} */

/* h1 {
  float: left;
}
nav {
  float: right;
} */
/* Note: if the h1 and nav are floating,
  their parent element (the header) th has no content anymore so its height is 0 ! */

/* FIRST TECHNIQUE TO FIX THE PROBLEM  */
/* .clear {
  we can clear the right, the left or both float and it will fix the problem that the height of the header was null
  clear: both;
} */

/* SECOND TECHNIQUE : THE CLEARFIX HACK */
/* Avoid to have to add an empty div in the htlm file, we just add a class 'clearfix' in the parent element */
/* It's finally the same than adding an empty div bc we also add a new empty element but in the css file */
/* .clearfix::after {
  clear: both;
  content: "";
  display: block;
}

article { */
/* background-color: green; */
/* width: 825px;
  float: left;
}
aside { */
/* background-color: rgb(45, 134, 218); */
/* width: 300px;
  float: right;
} */

/* footer { */
/* background-color: yellow; */
/* Here we don't need to create another element to clear the float. Indeed, before we didn't have a sibling element (that was not floating) on which to use the 'clear: both' (all the elements inside of the header were floating) but here we do, we can use the footer.  */
/* clear: both;
} */

/* FLEXBOX */
.main-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.author-box {
  display: flex;
  align-items: center;
  margin-bottom: 15px;
}

.author {
  margin-bottom: 0;
  margin-left: 15px;
}

.related-post {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-bottom: 30px;
}

.related-link:link {
  font-size: 18px;
  font-weight: bold;
  font-style: normal;
  /* IMPORTANT: Don't forget that a link is an inline element by default! So can't change the vertical margin by default */
  display: block;
  margin-bottom: 5px;
}
.related-author {
  margin-bottom: 0;
  font-size: 14px;
  font-weight: normal;
  font-style: italic;
}

/* FLEXBOX LAYOUT */
/* .row {
  display: flex;
  gap: 65px;
  align-items: flex-start;
  margin-bottom: 60px;
} */

/* aside { */
/* DEFAULT VALUES:
  flex-grow: 0;
  flex-shrink: 1;
  flex-basis: auto; */
/* flex: 0 0 310px; */
/* } */

/* article { */
/* flex: 0 0 825px; */
/* flex: 1; */
/* margin-bottom: 0; */
/* } */

/* CSS GRID LAYOUT */
.container {
  display: grid;
  grid-template-columns: 1fr 310px;
  /* grid-template-rows: ; */
  column-gap: 75px;
  row-gap: 60px;
  align-items: start;
}

.main-header {
  /* grid-column: 1 / 3; */
  grid-column: 1 / -1;
}

footer {
  background-color: blueviolet;
  grid-column: 1 / -1;
}
